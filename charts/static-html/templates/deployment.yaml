apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "static-html.fullname" . }}
  labels:
    {{- include "static-html.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "static-html.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "static-html.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "static-html.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- if .Values.html.sync }}
      initContainers:
        - name: load-html
          image: alpine:latest
          command: [ "/bin/sh", "-c" ]
          args: [ "apk update; apk add --upgrade git openssh-client; git clone {{ .Values.html.gitRepo }} /html" ]
          volumeMounts:
            - mountPath: /html
              name: html
            - mountPath: /deploykey
              name: ssh-deploy-key
          env:
            - name: GIT_SSH_COMMAND
              value: "ssh -i /deploykey"
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: https
              containerPort: 443
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: html
              mountPath: /usr/share/nginx/html
            - name: config
              mountPath: /etc/nginx/conf.d/website.conf
              subPath: website.conf
      volumes:
        - name: html
          emptyDir: {}
        - name: config
          configMap:
            name: {{ include "static-html.fullname" . }}
        - name: ssh-deploy-key
          secret:
            secretName: {{ .Values.html.deploykey }}
            defaultMode: 256
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
